/* offset-x | offset-y | blur-radius | spread-radius | color */
@mixin shadow($blur-radius, $spread-radius, $shadow-color, $shadow-amount) {
  box-shadow: 0px 0px $blur-radius $spread-radius
    transparentize($color: $shadow-color, $amount: $shadow-amount);
}

@mixin transparent-back($color-value, $amount-value) {
  $darkened: darken($color-value, 42%);

  @if $color-value == $light or $color-value == white {
    $darkened: darken($color-value, 12%);
  }

  @include lin-gradient(
    $to-top-left,
    transparentize($color: $darkened, $amount: $amount-value) 0%,
    transparentize($color: $color-value, $amount: $amount-value) 100%
  );

  @if $color-value == $black or $color-value == $dark or $color-value == $dark-bis {
    $lightened: lighten($color-value, 50%);

    @include lin-gradient(
      $to-top-left,
      transparentize($color: $color-value, $amount: $amount-value) 0%,
      transparentize($color: $lightened, $amount: $amount-value) 100%
    );
  }
}

@mixin blur-filter($amount-value) {
  backdrop-filter: blur($amount-value);
  -webkit-backdrop-filter: blur($amount-value);
}

@mixin btn-colors($color-value) {
  $main: $color-value;
  $lightened: lighten($color-value, 20%);
  $darkened: darken($color-value, 20%);
  $amount-value: 0.2;

  // white buttons
  @if $color-value == $white or $color-value == $light {
    @include rad-gradient(
      transparentize($color: $lightened, $amount: $amount-value),
      60%,
      transparentize($color: $main, $amount: $amount-value),
      70%,
      transparentize($color: $darkened, $amount: $amount-value),
      100%
    );
  } @else {
    // dark buttons
    @if $color-value == $black or $color-value == $dark {
      $main: lighten($color-value, 10%);
    }

    @include rad-gradient(
      transparentize($color: $darkened, $amount: $amount-value),
      40%,
      transparentize($color: $main, $amount: $amount-value),
      100%,
      transparentize($color: $lightened, $amount: $amount-value),
      100%
    );
  }

  border: 2px solid transparentize($color: darken($main, 10%), $amount: $amount-value);
  &:hover {
    transform: scale(1.08);
    @include shadow(6px, 1px, $color-value, 0);
  }
  &.is-hovered {
    background-color: $color-value;
  }
}

@mixin recenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flash-colors($color-value) {
  border: 3px solid transparentize(desaturate($color-value, 50%), 0.5);
  @include blur-filter(4px);
  background-color: none;

  @include shadow(6px, 3px, desaturate($color-value, 50%), 0.5);

  @include lin-gradient(
    $to-botom-right,
    transparentize(saturate($color-value, 50%), 0.3) 0%,
    transparentize(desaturate($color-value, 50%), 0.3) 100%
  );
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin lin-gradient($direction, $color-1, $color-2) {
  background: $color-1; /* fallback for old browsers */
  background: -webkit-linear-gradient(
    $direction,
    $color-1,
    $color-2
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(
    $direction,
    $color-1,
    $color-2
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

@mixin rad-gradient($color-1, $amount-1, $color-2, $amount-2, $color-3, $amount-3) {
  background: $color-1; /* fallback for old browsers */
  background: -webkit-radial-gradient(
    $color-1 $amount-1,
    $color-2 $amount-2,
    $color-3 $amount-3
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: radial-gradient(
    $color-1 $amount-1,
    $color-2 $amount-2,
    $color-3 $amount-3
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}
