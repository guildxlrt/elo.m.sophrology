/* offset-x | offset-y | blur-radius | spread-radius | color */
@mixin smoothShadow($blur-radius, $spread-radius, $shadow-color, $shadow-amount) {
  box-shadow: 0px 0px $blur-radius $spread-radius
    transparentize($color: $shadow-color, $amount: $shadow-amount);
}

@mixin slantShadow($direction, $blur-radius, $shadow-amount) {
  box-shadow: $direction calc($direction + 2px) $blur-radius 4px
    transparentize($shadow, $shadow-amount);
}

@mixin transparentBack($color-value, $amount-value) {
  $darkened: darken($color-value, 42%);

  @if $color-value == $light or $color-value == white {
    $darkened: darken($color-value, 12%);
  }

  @include linGradient(
    $to-top-left,
    transparentize($color: $darkened, $amount: $amount-value) 0%,
    transparentize($color: $color-value, $amount: $amount-value) 100%
  );

  @if $color-value == $black or $color-value == $dark or $color-value == $dark-bis {
    $lightened: lighten($color-value, 50%);

    @include linGradient(
      $to-top-left,
      transparentize($color: $color-value, $amount: $amount-value) 0%,
      transparentize($color: $lightened, $amount: $amount-value) 100%
    );
  }
}

@mixin blurFilter($amount-value) {
  backdrop-filter: blur($amount-value);
  -webkit-backdrop-filter: blur($amount-value);
}

@mixin btnColors($color-value) {
  $main: $color-value;
  $lightened: lighten($color-value, 20%);
  $darkened: darken($color-value, 20%);
  $amount-value: 0.2;

  // white buttons
  @if $color-value == $white or $color-value == $light {
    @include radGradient(
      transparentize($color: $lightened, $amount: $amount-value),
      60%,
      transparentize($color: $main, $amount: $amount-value),
      70%,
      transparentize($color: $darkened, $amount: $amount-value),
      100%
    );
  } @else {
    // dark buttons
    @if $color-value == $black or $color-value == $dark {
      $main: lighten($color-value, 10%);
    }

    @include radGradient(
      transparentize($color: $darkened, $amount: $amount-value),
      40%,
      transparentize($color: $main, $amount: $amount-value),
      100%,
      transparentize($color: $lightened, $amount: $amount-value),
      100%
    );
  }

  border: 2px solid transparentize($color: darken($main, 10%), $amount: $amount-value);
  &:hover {
    transform: scale(1.08);
    @include smoothShadow(6px, 1px, $color-value, 0);
  }

  &.is-hovered {
    background-color: $color-value;
  }
}

@mixin reCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flashColors($color-value) {
  border: 3px solid transparentize(desaturate($color-value, 50%), 0.5);
  @include blurFilter(4px);
  background-color: none;

  @include smoothShadow(6px, 3px, desaturate($color-value, 50%), 0.5);

  @include linGradient(
    $to-botom-right,
    transparentize(saturate($color-value, 50%), 0.3) 0%,
    transparentize(desaturate($color-value, 50%), 0.3) 100%
  );
}

@mixin flexRow {
  display: flex;
  flex-direction: row;
}

@mixin flexColumn {
  display: flex;
  flex-direction: column;
}

@mixin linGradient($direction, $color-1, $color-2) {
  background: $color-1; /* fallback for old browsers */
  background: -webkit-linear-gradient(
    $direction,
    $color-1,
    $color-2
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(
    $direction,
    $color-1,
    $color-2
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

@mixin radGradient($color-1, $amount-1, $color-2, $amount-2, $color-3, $amount-3) {
  background: $color-1; /* fallback for old browsers */
  background: -webkit-radial-gradient(
    $color-1 $amount-1,
    $color-2 $amount-2,
    $color-3 $amount-3
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: radial-gradient(
    $color-1 $amount-1,
    $color-2 $amount-2,
    $color-3 $amount-3
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

@mixin over($timing-func) {
  transform: scale(1);
  opacity: 1;
  animation: over 6.2s $timing-func 0.3s infinite alternate backwards;
}

@mixin opacity($timing-func) {
  opacity: 0;
  animation: justOpacity 2.2s $timing-func 0.3s 1 alternate forwards;
}

@mixin post-radius($content-type) {
  @if $content-type == 'article' {
    border-radius: 3px 10px 6px 4px;
  }

  @if $content-type == 'video' {
    border-radius: 10% 90% 25% 44% / 30% 30% 65% 30%;
  }
}
